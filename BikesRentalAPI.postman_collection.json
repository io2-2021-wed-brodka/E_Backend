{
	"info": {
		"_postman_id": "e87a7d44-c855-4112-8a09-944367a8f8d3",
		"name": "BikesRentalAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "bikes",
			"item": [
				{
					"name": "rented",
					"item": [
						{
							"name": "GET bikes-rented",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bikes/rented",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"rented"
									]
								},
								"description": "Gets all rented bikes by the user at the moment"
							},
							"response": []
						},
						{
							"name": "POST bikes-rented",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"voluptate laborum eu n\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/bikes/rented",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"rented"
									]
								},
								"description": "Rents a bike"
							},
							"response": []
						}
					]
				},
				{
					"name": "blocked",
					"item": [
						{
							"name": "GET bikes-blocked",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bikes/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"blocked"
									]
								},
								"description": "Gets all blocked bikes"
							},
							"response": []
						},
						{
							"name": "POST bikes-blocked",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"et aute non\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/bikes/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"blocked"
									]
								},
								"description": "Blocks bike"
							},
							"response": []
						},
						{
							"name": "DELETE bikes-blocked-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bikes/blocked/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"blocked",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Unblocks bike with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "reserved",
					"item": [
						{
							"name": "GET bikes-reserved",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bikes/reserved",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"reserved"
									]
								},
								"description": "Gets all currently reserved bikes of the user."
							},
							"response": []
						},
						{
							"name": "POST bikes-reserved",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"cupidatat ad labore eiusmod\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/bikes/reserved",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"reserved"
									]
								},
								"description": "Reserve a bike"
							},
							"response": []
						},
						{
							"name": "DELETE bikes-reserved-id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/bikes/reserved/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bikes",
										"reserved",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Drops reservation of the bike with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET bikes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.environment.get(\"userRole\")===\"user\")\r",
									"{\r",
									"    pm.test(\"Status test\", function () {\r",
									"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
									"        pm.expect(pm.response.code).to.be.below(500);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bikes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bikes"
							]
						},
						"description": "Gets all bikes"
					},
					"response": []
				},
				{
					"name": "POST bikes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.environment.get(\"userRole\")===\"user\")\r",
									"{\r",
									"    pm.test(\"Status test\", function () {\r",
									"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
									"        pm.expect(pm.response.code).to.be.below(500);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"stationId\": \"culpa cupidatat\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/bikes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bikes"
							]
						},
						"description": "Adds a new bike"
					},
					"response": []
				},
				{
					"name": "DELETE bikes-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.environment.get(\"userRole\")===\"user\")\r",
									"{\r",
									"    pm.test(\"Status test\", function () {\r",
									"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
									"        pm.expect(pm.response.code).to.be.below(500);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/bikes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bikes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes bike with specified id"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "stations",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "bikes",
							"item": [
								{
									"name": "GET stations-id-bikes",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stations/:id/bikes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stations",
												":id",
												"bikes"
											],
											"variable": [
												{
													"key": "id",
													"value": "reprehenderit",
													"description": "(Required) "
												}
											]
										},
										"description": "Gets all bikes associated with station with specified id"
									},
									"response": []
								},
								{
									"name": "POST stations-id-bikes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"officia quis\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/stations/:id/bikes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stations",
												":id",
												"bikes"
											],
											"variable": [
												{
													"key": "id",
													"value": "reprehenderit",
													"description": "(Required) "
												}
											]
										},
										"description": "Associates bike with specified station (e.g. returns rented bike to station)"
									},
									"response": []
								}
							]
						},
						{
							"name": "GET stations-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets station with specified id"
							},
							"response": []
						},
						{
							"name": "DELETE stations-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes station with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "blocked",
					"item": [
						{
							"name": "GET stations-blocked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stations/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stations",
										"blocked"
									]
								},
								"description": "Gets all blocked stations"
							},
							"response": []
						},
						{
							"name": "POST stations-blocked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"dolor esse laborum sint\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stations/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stations",
										"blocked"
									]
								},
								"description": "Block station"
							},
							"response": []
						},
						{
							"name": "DELETE stations-blocked-id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.environment.get(\"userRole\")===\"user\")\r",
											"{\r",
											"    pm.test(\"Status test\", function () {\r",
											"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
											"        pm.expect(pm.response.code).to.be.below(500);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stations/blocked/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stations",
										"blocked",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Unblocks station with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET stations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.environment.get(\"userRole\")===\"user\")\r",
									"{\r",
									"    pm.test(\"Status test\", function () {\r",
									"        pm.expect(pm.response.code).to.be.greaterThan(199);\r",
									"        pm.expect(pm.response.code).to.be.below(300);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stations"
							]
						},
						"description": "Gets all stations"
					},
					"response": []
				},
				{
					"name": "POST stations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.environment.get(\"userRole\")===\"user\")\r",
									"{\r",
									"    pm.test(\"Status test\", function () {\r",
									"        pm.expect(pm.response.code).to.be.greaterThan(399);\r",
									"        pm.expect(pm.response.code).to.be.below(500);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test 1\",\n    \"maxBikes\": \"10\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/stations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stations"
							]
						},
						"description": "Adds a new station"
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "blocked",
					"item": [
						{
							"name": "GET users-blocked",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocked"
									]
								},
								"description": "Gets all blocked users"
							},
							"response": []
						},
						{
							"name": "POST users-blocked",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"qui eiusmod sit\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/blocked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocked"
									]
								},
								"description": "Block user"
							},
							"response": []
						},
						{
							"name": "DELETE users-blocked-id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/blocked/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"blocked",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Unblocks user with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Gets all users"
					},
					"response": []
				}
			]
		},
		{
			"name": "techs",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "GET techs-id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/techs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"techs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets tech with specified id"
							},
							"response": []
						},
						{
							"name": "DELETE techs-id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/techs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"techs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "reprehenderit",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes tech with specified id"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET techs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/techs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"techs"
							]
						},
						"description": "Gets all techs"
					},
					"response": []
				},
				{
					"name": "POST techs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"in aliquip ex ut\",\n    \"password\": \"et ipsum elit quis culpa\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/techs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"techs"
							]
						},
						"description": "Adds a new tech"
					},
					"response": []
				}
			]
		},
		{
			"name": "malfunctions",
			"item": [
				{
					"name": "GET malfunctions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/malfunctions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"malfunctions"
							]
						},
						"description": "Gets all malfunctions"
					},
					"response": []
				},
				{
					"name": "POST malfunctions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"dolore Lorem fugiat\",\n    \"description\": \"ea in culpa reprehend\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/malfunctions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"malfunctions"
							]
						},
						"description": "Report a malfunction"
					},
					"response": []
				},
				{
					"name": "DELETE malfunctions-id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/malfunctions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"malfunctions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "reprehenderit",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete malfunction with specified id"
					},
					"response": []
				}
			]
		},
		{
			"name": "POST login",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"test\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Gets valid token to authorize with other endpoints"
			},
			"response": []
		},
		{
			"name": "POST register",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"test\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				},
				"description": "registers new unique user"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{currentAccessToken}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{${{currentAccessToken}}}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const echoPostRequestUser = {",
					"  url: 'http://localhost:8080/register',",
					"  method: 'POST',",
					"  header: 'Content-Type:application/json',",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: JSON.stringify(",
					"        {",
					"        \t\"login\": \"test\",",
					"            \"password\": \"test\"",
					"        })",
					"  }",
					"};",
					"",
					"const echoPostLoginUser = {",
					"  url: 'http://localhost:8080/login',",
					"  method: 'POST',",
					"  header: 'Content-Type:application/json',",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: JSON.stringify(",
					"        {",
					"        \t\"login\": \"test\",",
					"            \"password\": \"test\"",
					"        })",
					"  }",
					"};",
					"",
					"",
					"",
					"pm.sendRequest(echoPostRequestUser, function (err, res) {",
					"console.log(err ? err : res.json());",
					"});",
					"",
					"pm.sendRequest(echoPostLoginUser, function (err, res) {",
					"console.log(err ? err : res.json());",
					"    if (err === null) {",
					"        var responseJson = res.json();",
					"        pm.environment.set(\"currentAccessToken\", responseJson.token);    ",
					"        pm.environment.set(\"userRole\", \"user\");",
					"",
					"",
					"        console.log(\"Bearer \" + responseJson.token);",
					"        console.log(pm.environment.get(\"userRole\"));",
					"        console.log(pm.environment.get(\"currentAccessToken\"));    ",
					"    }",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "currentAccessToken",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0IiwiZXhwIjoxNjE4MzM1MDY5fQ.99NaYyLzIFwsej0_9IKs6tmLIaL29HCuBg5Z2x-7R1Q"
		},
		{
			"key": "station1Id",
			"value": "",
			"disabled": true
		},
		{
			"key": "station2Id",
			"value": "",
			"disabled": true
		}
	]
}